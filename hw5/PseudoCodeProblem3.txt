PREREQUISITE(int[][] adj) {
    N = length(adj);
    int[] memo = new int[N + 1]; int res = 0;

    List topologicalOrdering = TOP_ORDER(adj);
    for(int i = 0; i < topologicalOrdering.size(); i++) {
        for(int j = 1; j < adj[topologicalOrdering.get(i)].length; j++) {
            if(adj[topologicalOrdering.get(i)][j] == 1) {
                memo[j] = Math.max(memo[j], memo[topologicalOrdering.get(i)] + 1);
                res = Math.max(res, memo[j]);
            }
        }
    }
    PRINT(res + 1);
}